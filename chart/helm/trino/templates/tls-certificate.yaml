{{- define "certDnsNames" -}}
  {{- $dnsNames := list "localhost" "trino" (printf "%s.%s" "trino" .Release.Namespace) (printf "%s.%s.svc" "trino" .Release.Namespace) (printf "%s.%s.svc.cluster.local" "trino" .Release.Namespace) -}}
    {{- $dnsNames = concat $dnsNames .Values.tls.generateCerts.subjectAlternativeName.additionalDnsNames -}}
  {{- $dnsNames | toYaml -}}
{{- end -}}
{{- define "certIpAddresses" -}}
  {{- $ipAddresses := list "127.0.0.1" -}}
  {{- $ipAddresses = concat $ipAddresses .Values.tls.generateCerts.subjectAlternativeName.additionalIpAddresses -}}
  {{- $ipAddresses | toYaml -}}
{{- end -}}


{{- if and .Values.tls.enabled .Values.tls.generateCerts.enabled }}
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: trino-certificate
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    {{- include "cert_manager_label" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
    "helm.sh/hook-weight": "-11"
spec:
  secretName: {{ .Values.tls.generateCerts.secretName }}
  additionalOutputFormats:
    - type: CombinedPEM
  duration: {{ default 365 .Values.tls.generateCerts.duration | mul 24 }}h
  renewBefore: 360h
  commonName: trino.svc
  isCA: true
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
  dnsNames:
{{ ( include "certDnsNames" . | indent 4 ) }}
  ipAddresses:
{{ ( include "certIpAddresses" . | indent 4) }}
  issuerRef:
    group: cert-manager.io
  {{- if .Values.tls.generateCerts.clusterIssuerName }}
    name: {{ .Values.tls.generateCerts.clusterIssuerName }}
    kind: ClusterIssuer
  {{- else }}
    name: trino-tls-issuer
    kind: Issuer
  {{- end }}
{{- end }}
